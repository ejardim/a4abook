[["stock-assessment-framework.html", "Chapter 6 Stock assessment framework 6.1 Maths description 6.2 Classes Description ", " Chapter 6 Stock assessment framework 6.1 Maths description 6.1.1 Observations The stock assessment model is based on two types of observations: catches, \\(\\hat{C}\\), and abundance indices, \\(\\hat{I}\\). The model predicts catches at age \\(C_{ay}\\) and indices of abundance \\(I_{ays}\\) for each age \\(a\\), year \\(y\\) and survey \\(s\\) in the input dataset. It is assumed that the observed catches are normally distributed about the model predictions on the log scale with observation variance \\(\\sigma^2_{ay}\\). that is: \\[\\log \\hat{C}_{ay} \\sim \\text{Normal} \\Big( \\log C_{ay}, \\sigma^2_{ay}\\Big)\\] likewise, the observed survey indices are assumed to be normally distributed about the model predictions on the log scale with observation variance \\(\\tau^2_{ays}\\): \\[\\log \\hat{I}_{ays} \\sim \\text{Normal} \\Big( \\log I_{ays}, \\tau^2_{ays} \\Big)\\] This leads to the definition of the log-likelihood of the observed catches \\[\\ell_C = \\sum_{ay} w^{(c)}_{ay}\\ \\ell_N \\Big( \\log C_{ay}, \\sigma^2_{ay} ;\\ \\log \\hat{C}_{ay} \\Big)\\] and the log-likelihood of the observed survey indices \\[\\ell_I = \\sum_s \\sum_{ay} w^{(s)}_{ays}\\ \\ell_N \\Big( \\log I_{ays}, \\tau_{ays}^2 ;\\ \\log \\hat{I}_{ays} \\Big)\\] where \\(\\ell_N\\) is the normal log-likelihood function and \\(w^{(c)}_{ay}\\) and \\(w^{(s)}_{ays}\\) are optional weights for the catch and index observations, respectively. The total log-likelihood is then \\[\\ell = \\ell_C + \\ell_I\\] 6.1.2 The population dynamics model To predict catches and survey indices, the model uses the standard population dynamics model \\[N_{a+1,y+1} = N_{ay} \\exp \\left( - F_{ay} - M_{ay} \\right)\\] where \\(N_{ay}\\) is the number of individuals at age \\(a\\) in year \\(y\\), \\(F_{ay}\\) is the fishing mortality at age \\(a\\) in year \\(y\\), and \\(M_{ay}\\) is the natural mortality at age \\(a\\) in year \\(y\\). Any fish that survived beyond the oldest age \\(A\\) in the model are accumulated in the oldest age group and are assumed to be fished at a common rate \\(F_{A,y}\\). \\[ \\begin{align} N_{A,y+1} = &amp;N_{A-1,y} \\exp \\left( - F_{A-1,y} - M_{A-1,y} \\right) \\\\ &amp;+ N_{A,y} \\exp \\left( - F_{A,y} - M_{A,y} \\right) \\end{align} \\] The numbers \\(N_{a,y}\\) are initiated in the first year, \\(y=1\\) and at the youngest age, \\(a=1\\), and the matrix of numbers at age are filled in according to the population dynamics model stated above (see Figure 6.1). Figure 6.1: Statistical catch at age population dynamics model Defining \\(R_y = N_{1,y}\\), the numbers at age can be written (ignoring the plus group) as: \\[N_{a,y} = \\left\\{ \\begin{matrix} R_{y-a+1} \\exp \\left( - \\sum^a_{i=1} F_{a-i,y-i} + M_{a-i,y-i} \\right) &amp; y \\geq a \\\\ N_{a-y+1,1} \\exp \\left( - \\sum^{a-y}_{i=1} F_{a-i,y-i} + M_{a-i,y-i} \\right) &amp; y \\lt a \\end{matrix} \\right.\\] Catches in numbers by age and year are defined in terms of the three quantities: natural mortality, fishing mortality and recruitment; using a modified form of the well known Baranov catch equation: \\[C_{ay} = \\frac{F_{ay}}{F_{ay}+M_{ay}}\\left(1 - e^{-(F_{ay}+M_{ay})}\\right) R_{y}e^{-\\sum (F_{ay} + M_{ay})} \\] Survey indices by age and year are defined in terms of the same three quantities with the addition of survey catchability: \\[I_{ays} = Q_{ays} R_{y}e^{-\\sum (F_{ay} + M_{ay})}\\] Observed catches and observed survey indices are assumed to be log-normally distributed, or equivalently, normally distributed on the log-scale, with specific observation variance: \\[ \\log \\hat{C}_{ay} \\sim \\text{Normal} \\Big( \\log C_{ay}, \\sigma^2_{ay}\\Big) \\] \\[ \\log \\hat{I}_{ays} \\sim \\text{Normal} \\Big( \\log I_{ays}, \\tau^2_{ays} \\Big) \\] The log-likelihood can now be defined as the sum of the log-likelihood of the observed catches: \\[ \\ell_C = \\sum_{ay} w^{(c)}_{ay}\\ \\ell_N \\Big( \\log C_{ay}, \\sigma^2_{ay} ;\\ \\log \\hat{C}_{ay} \\Big) \\] and the log-likelihood of the observed survey indices as: \\[ \\ell_I = \\sum_s \\sum_{ay} w^{(s)}_{ays}\\ \\ell_N \\Big( \\log I_{ays}, \\tau_{ays}^2 ;\\ \\log \\hat{I}_{ays} \\Big)\\] giving the total log-likelihood \\[\\ell = \\ell_C + \\ell_I\\] which is defined in terms of the strictly positive quantites, \\(M_{ay}\\), \\(F_{ay}\\), \\(Q_{ays}\\) and \\(R_{y}\\), and the observation variances \\(\\sigma_{ay}\\) and \\(\\tau_{ays}\\). As such, the log-likelihood is over-parameterised as there are many more parameters than observations. In order to reduce the number of parameters, \\(M_{ay}\\) is assumed known (as is common). The remaining parameters are written in terms of a linear combination of covariates \\(x_{ayk}\\), e.g. \\[\\log F_{ay} = \\sum_k \\beta_k x_{ayk}\\] where \\(k\\) is the number of parameters to be estimated and is sufficiently small. Using this tecnique the quantities \\(\\log F\\), \\(\\log Q\\), \\(\\log \\sigma\\) and \\(\\log \\tau\\) %\\(\\log \\text{initial\\,age\\,structure}\\) % this is not present in the above (in bold in the equations above) can be described by a reduced number of parameters. The following section has more discussion on the use of linear models in a4a. The a4a statistical catch-at-age model can addionally allow for a functional relationship that links predicted recruitment \\(\\tilde{R}\\) based on spawning stock biomass and modelled recruitment \\(R\\), to be imposed as a fixed variance random effect. [NEEDS REVISION, sentence not clear] Options for the relationship are the hard coded models Ricker, Beverton Holt, smooth hockeystick or geometric mean. This is implemented by including a third component in the log-likelihood: \\[\\ell_{SR} = \\sum_y \\ell_N \\Big( \\log \\tilde{R}_y(a, b), \\phi_y^2 ;\\ \\log R_y \\Big)\\] giving the total log-likelihood \\[\\ell = \\ell_C + \\ell_I + \\ell_{SR}\\] Using the (time varying) Ricker model as an example, predicted recruitment is \\[\\tilde{R}_y(a_y,b_y) = a_y S_{y-1} e^{-b_y S_{y-1}}\\] where \\(S\\) is spawning stock biomass derived from the model parameters \\(F\\) and \\(R\\), and the fixed quantites \\(M\\) and mean weights by year and age. It is assumed that \\(R\\) is log-normally distributed, or equivalently, normally distributed on the log-scale about the (log) recruitment predicted by the SR model \\(\\tilde{R}\\), with known variance \\(\\phi^2\\), i.e. \\[\\log R_y \\sim \\text{Normal} \\Big( \\log \\tilde{R}_y, \\phi_y^2 \\Big)\\] which leads to the definition of \\(\\ell_{SR}\\) given above. In all cases \\(a\\) and \\(b\\) are strictly positive, and with the quantities \\(F\\), \\(R\\), etc. linear models are used to parameterise \\(\\log a\\) and/or \\(\\log b\\), where relevant. By default, recruitment \\(R\\) as apposed to the reruitment predicted from a stock recruitment model \\(\\tilde{R}\\), is specified as a linear model with a parameter for each year, i.e. \\[\\log R_y = \\gamma_y\\] This is to allow modelled recruitment \\(R_y\\) to be shrunk towards the stock recruitment model. However, if it is considered appropriate that recruitment can be determined exactly by a relationship with covariates, it is possible, to instead define \\(\\log R\\) in terms of a linear model in the same way as \\(\\log F\\), \\(\\log Q\\), \\(\\log \\sigma\\) and \\(\\log \\tau\\). %But this is pretty much the same as taking a geometric mean, with a model on log a, and making the variance very small. 6.2 Classes Description The data structure used to store and report the fitting process follows an object-oriented paradigm (e.g., the S4 system in R) and is hierarchically organized. The type argument in the sca method defines the fitting method—either maximum likelihood or MCMC — and specifies whether the variance-covariance matrix of the parameters is calculated and returned in the case of maximum likelihood. The resulting object belongs to a specific class, depending on the selected option. Figure 6.2 illustrates the input/output model of the statistical stock assessment method based on catch-at-age data. Figure 6.2: The fit process input/output model Table 6.1 provides details about the type of fit approach and computation of variance covariance information. Table 6.1: Fit Types and Associated Classes Type of Fit Fit Method Variance-Covariance Matrix Output Object Class MP Maximum Likelihood No a4aFit Assessment Maximum Likelihood Yes a4aFitSA MCMC MCMC Yes(check) a4aFitMCMC Type MP, for “Management Procedure,” returns an a4aFit class object designed for use in MSEs (Management Strategy Evaluations) with full feedback models (REF PUNT and KELL). Inverting the Jacobian to compute the variance-covariance matrix is computationally intensive in maximum likelihood models, and as MSE analyses often involve thousands of iterations, using type=\"MP\" significantly speeds up the process. This option is advantageous for scenarios requiring multiple model fits. However, the lack of immediate feedback on model convergence is a drawback, as convergence is assessed by inverting the Jacobian. A failed inversion indicates non-convergence. Table 6.2 describes the composition of the a4aFit class. Table 6.2: a4aFit Class Description Class Slot Slot’s Class Description a4aFit call call Code used to run the analysis catch.n FLQuant Catch numbers at age and year clock numeric Time to run the analysis desc character Description of the stock and/or analysis fitSumm array Summary statistics of the fit (e.g., number of data points) harvest FLQuant Fishing mortality at age and year index FLQuants Indices of abundance (age/biomass, by year) name character Stock name range numeric Age and year range of the data stock.n FLQuant Population in numbers (age and year) The a4aFitSA and a4aFitMCMC classes extend a4aFit, retaining all its slots while adding a pars slot of class SCAPars. Table 6.3 outlines these classes. Table 6.3: a4aFitSA and a4aFitMCMC Class Description Class Slot Slot’s Class Description a4aFitSA All a4aFit Inherited from a4aFit pars SCAPars Parameter information a4aFitMCMC All a4aFit Inherited from a4aFit pars SCAPars Parameter information The SCAPars class stores details about submodel parameters, such as formulas and distributions, and includes three slots: stkmodel for stock model parameters, qmodel for catchability parameters, and vmodel for variance parameters. Table 6.4 describes the SCAPars class. Table 6.4: SCAPars Class Description Class Slot Slot’s Class Description SCAPars stkmodel a4aStkParams Details of fishing mortality, stock recruitment, and initial stock numbers qmodel submodel Details of catchability parameters vmodel submodel Details of variance parameters The stkmodel slot encompasses parameters for fishing mortality, stock recruitment, and initial stock numbers. Due to potential correlations among these parameters, their variance-covariance matrix is reported collectively. Table 6.5 describes the slots of the a4aStkParams class. Table 6.5: a4aStkParams Class Description Class Slot Slot’s Class Description a4aStkParams centering FLPar Centering parameters coefficients FLPar Model coefficients desc character Description distr character Distributions fMod formula Fishing mortality model link function Link function linkinv function Inverse link function m FLQuant Mortality parameters mat FLQuant Maturity parameters n1Mod formula Initial stock numbers model name character Stock name range numeric Age and year range srMod formula Stock-recruitment model units character Units of measurement vcov array Variance-covariance matrix wt FLQuant Weights The qmodel and vmodel slots share the submodel class, which describes single submodels. Table 6.6 provides details. Table 6.6: submodel Class Description Class Slot Slot’s Class Description submodel centering FLPar Centering parameters coefficients FLPar Model coefficients desc character Description distr character Distributions formula formula Submodel formula link function Link function linkinv function Inverse link function name character Stock name range numeric Age and year range vcov array Variance-covariance matrix "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
